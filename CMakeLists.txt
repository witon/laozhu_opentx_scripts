cmake_minimum_required(VERSION 3.13)

project(lua_glider_competition_sound_lib)
if(WIN32)
    SET(LIB_SRC audio.cpp audioQueue.cpp luaApi.cpp sounddll.cpp strhelpers.cpp tts_en.cpp keyReceiver.cpp)
    set(CMAKE_CXX_COMPILER "g++")
    set(LUA_INCLUDE_DIR "third_part/lua-5.3.6/src/")
    set(LUA_LIB_DIR "third_part/lua-5.3.6/src/")
    LINK_LIBRARIES(winmm stdc++ lua)
    #FIND_PACKAGE(Lua REQUIRED)
    include_directories(${LUA_INCLUDE_DIR} ${CPLUS_INCLUDE_PATH})
    link_directories(${CPLUS_LIB_PATH} ${LUA_LIB_DIR})
    #link_libraries(${LUA_LIBRARIES})
    ADD_LIBRARY(sound SHARED ${LIB_SRC})
    set_target_properties(sound PROPERTIES PREFIX "")
endif(WIN32)
if(UNIX AND NOT APPLE)
    set(LINUX TRUE)
endif()
if(LINUX)
    SET(LIB_SRC audio.cpp audioQueue.cpp luaApi.cpp soundso.cpp strhelpers.cpp tts_en.cpp playsound.cpp WaveFile.cpp)
    set(CMAKE_CXX_COMPILER "g++")
    LINK_LIBRARIES(asound stdc++)
    FIND_PACKAGE(Lua REQUIRED)
    include_directories(${LUA_INCLUDE_DIR} ${CPLUS_INCLUDE_PATH})
    link_directories(${CPLUS_LIB_PATH})
    link_libraries(${LUA_LIBRARIES})
    ADD_LIBRARY(sound SHARED ${LIB_SRC})
    set_target_properties(sound PROPERTIES PREFIX "")
endif(LINUX)
